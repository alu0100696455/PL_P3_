{"filter":false,"title":"app.js","tooltip":"/app.js","undoManager":{"mark":3,"position":3,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":67,"column":3},"action":"insert","lines":["var express = require('express');","var app = express();","var path = require('path');","var expressLayouts = require('express-ejs-layouts');","","","app.set('port', (process.env.PORT || 5000));","","app.set('views', path.join(__dirname, 'views'));","app.set('view engine', 'ejs');","app.use(expressLayouts);","","app.use(express.static(__dirname + '/public'));","","app.get('/', function (request, response) {","    response.render('index', { title: 'Analizador CSV' });","});","","app.get('/commaSeparated', function (request, response) {","","    var result;","    var original = request.query.input","    var temp = original;","    var regexp = /\\s*\"((?:[^\"\\\\]|\\\\.)*)\"\\s*,?|\\s*([^,]+),?|\\s*,/g;","    var lines = temp.split(/\\n+\\s*/);","    var commonLength = NaN;","    var row;","    var rows = [];","","    for (var t in lines) {","        var temp = lines[t];","        var m = temp.match(regexp);","        var result = [];","        var error = false;","","        if (m) {","            if (commonLength && (commonLength != m.length)) {","                //alert('ERROR! row <'+temp+'> has '+m.length+' items!');","                error = true;","            }","            else {","                commonLength = m.length;","                error = false;","            }","            for (var i in m) {","                var removecomma = m[i].replace(/,\\s*$/, '');","                var remove1stquote = removecomma.replace(/^\\s*\"/, '');","                var removelastquote = remove1stquote.replace(/\"\\s*$/, '');","                var removeescapedquotes = removelastquote.replace(/\\\\\"/, '\"');","                result.push(removeescapedquotes);","            }","            var tr = error? 'class=\"error\"' : '';","            row = new Object();","            row.type = tr;","            row.items = result;","            rows.push(row);","        }","        else {","            console.log('ERROR! row ' + temp + ' does not look as legal CSV');","            error = true;","        }","    }","    response.send({ \"rows\": rows });","});","","app.listen(app.get('port'), function () {","    console.log(\"Node app is running at localhost:\" + app.get('port'));","});"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":0},"end":{"row":63,"column":3},"action":"remove","lines":["app.get('/commaSeparated', function (request, response) {","","    var result;","    var original = request.query.input","    var temp = original;","    var regexp = /\\s*\"((?:[^\"\\\\]|\\\\.)*)\"\\s*,?|\\s*([^,]+),?|\\s*,/g;","    var lines = temp.split(/\\n+\\s*/);","    var commonLength = NaN;","    var row;","    var rows = [];","","    for (var t in lines) {","        var temp = lines[t];","        var m = temp.match(regexp);","        var result = [];","        var error = false;","","        if (m) {","            if (commonLength && (commonLength != m.length)) {","                //alert('ERROR! row <'+temp+'> has '+m.length+' items!');","                error = true;","            }","            else {","                commonLength = m.length;","                error = false;","            }","            for (var i in m) {","                var removecomma = m[i].replace(/,\\s*$/, '');","                var remove1stquote = removecomma.replace(/^\\s*\"/, '');","                var removelastquote = remove1stquote.replace(/\"\\s*$/, '');","                var removeescapedquotes = removelastquote.replace(/\\\\\"/, '\"');","                result.push(removeescapedquotes);","            }","            var tr = error? 'class=\"error\"' : '';","            row = new Object();","            row.type = tr;","            row.items = result;","            rows.push(row);","        }","        else {","            console.log('ERROR! row ' + temp + ' does not look as legal CSV');","            error = true;","        }","    }","    response.send({ \"rows\": rows });","});"]}]}],[{"group":"doc","deltas":[{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":3},"end":{"row":17,"column":0},"action":"remove","lines":["",""]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":20,"column":3},"end":{"row":20,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1427312598750,"hash":"249ec1fc1877d360aba071430c98aceb7716fd2b"}